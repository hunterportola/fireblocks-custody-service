{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Originator Configuration",
  "description": "Configuration schema for Fireblocks Custody Service loan originators",
  "type": "object",
  "required": ["workspace", "lendingPartners", "vaultStructure", "approval", "transactionLimits", "apiSettings"],
  "properties": {
    "workspace": {
      "type": "object",
      "required": ["name", "environment"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Company or originator name"
        },
        "environment": {
          "type": "string",
          "enum": ["sandbox", "testnet", "mainnet"],
          "description": "Fireblocks environment"
        }
      }
    },
    "lendingPartners": {
      "type": "object",
      "required": ["partners"],
      "properties": {
        "partners": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["id", "name", "enabled"],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[A-Za-z0-9_-]+$",
                "description": "Unique partner identifier"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "description": "Partner display name"
              },
              "enabled": {
                "type": "boolean",
                "description": "Active/inactive status"
              }
            }
          }
        }
      }
    },
    "vaultStructure": {
      "type": "object",
      "required": ["namingConvention", "defaultAsset"],
      "properties": {
        "namingConvention": {
          "type": "object",
          "required": ["prefix", "distributionSuffix", "collectionSuffix"],
          "properties": {
            "prefix": {
              "type": "string",
              "pattern": "^[A-Z0-9_]+$",
              "description": "Company prefix (uppercase letters, numbers, underscores)"
            },
            "distributionSuffix": {
              "type": "string",
              "description": "Suffix for distribution vaults"
            },
            "collectionSuffix": {
              "type": "string",
              "description": "Suffix for collection vaults"
            }
          }
        },
        "defaultAsset": {
          "type": "string",
          "description": "Fireblocks asset ID (e.g., USDC_ETH, USDC_POLYGON)"
        }
      }
    },
    "approval": {
      "type": "object",
      "required": ["workflows"],
      "properties": {
        "workflows": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["workflowId", "name", "trigger", "steps"],
            "properties": {
              "workflowId": {
                "type": "string",
                "minLength": 1,
                "description": "Unique identifier for this workflow"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "description": "Human-friendly workflow name"
              },
              "description": {
                "type": "string"
              },
              "trigger": {
                "type": "object",
                "required": ["id", "predicate"],
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string"
                  },
                  "predicate": {
                    "type": "object",
                    "required": ["kind"],
                    "properties": {
                      "kind": {
                        "type": "string",
                        "enum": [
                          "always",
                          "amount_greater_than",
                          "amount_less_than",
                          "partner_is",
                          "custom_expression"
                        ]
                      },
                      "amount": {
                        "type": "string",
                        "pattern": "^-?\\d+(\\.\\d+)?$",
                        "description": "Decimal amount used for amount-based predicates"
                      },
                      "partnerId": {
                        "type": "string",
                        "description": "Partner identifier for partner-based predicates"
                      },
                      "expression": {
                        "type": "string",
                        "description": "Custom expression to evaluate"
                      }
                    }
                  }
                }
              },
              "steps": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": ["id", "name", "approverRoleIds", "minApprovals"],
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "description": {
                      "type": "string"
                    },
                    "approverRoleIds": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "minApprovals": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Minimum number of approvals required in this step"
                    },
                    "requiresSequentialApproval": {
                      "type": "boolean"
                    },
                    "escalationRoleId": {
                      "type": "string"
                    },
                    "onReject": {
                      "type": "string",
                      "enum": ["stop", "escalate", "continue"]
                    }
                  }
                }
              },
              "autoApprove": {
                "$ref": "#/properties/approval/properties/workflows/items/properties/trigger"
              },
              "timeoutBehaviour": {
                "type": "object",
                "required": ["timeoutHours", "onTimeout"],
                "properties": {
                  "timeoutHours": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "onTimeout": {
                    "type": "string",
                    "enum": ["auto_reject", "escalate", "manual_queue"]
                  },
                  "escalationRoleId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "transactionLimits": {
      "type": "object",
      "required": ["automated"],
      "properties": {
        "automated": {
          "type": "object",
          "required": ["singleTransaction"],
          "properties": {
            "singleTransaction": {
              "type": "number",
              "exclusiveMinimum": 0,
              "description": "Maximum single transaction amount"
            },
            "dailyLimit": {
              "type": "number",
              "exclusiveMinimum": 0,
              "description": "Maximum daily aggregate amount"
            },
            "monthlyLimit": {
              "type": "number",
              "exclusiveMinimum": 0,
              "description": "Maximum monthly aggregate amount"
            }
          }
        }
      }
    },
    "apiSettings": {
      "type": "object",
      "required": ["ipWhitelist"],
      "properties": {
        "ipWhitelist": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "pattern": "^(\\d{1,3}\\.){3}\\d{1,3}$",
            "description": "IP address allowed to use the API"
          }
        },
        "webhookEndpoint": {
          "type": "string",
          "format": "uri",
          "description": "Endpoint for transaction status updates"
        }
      }
    }
  }
}
